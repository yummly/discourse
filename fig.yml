db:
  image: postgres:9.3
  ports:
    - "5432"
redis:
  image: redis:2.8
  ports:
    - "6379"
  volumes:
    - tmp/redis/data/:/data
discourse:
  build: .
  command: bash -c 'rm -f /opt/discourse/tmp/pids/server.pid && echo $RAILS_RELATIVE_URL_ROOT > /opt/discourse/tmp/root && bundle exec config/unicorn_launcher -E $RAILS_ENV -c config/unicorn.conf.rb'
  volumes:
    - .:/opt/discourse
  ports:
    - "3000:3000"
  links:
    - db
    - redis
  environment:
    RAILS_ENV: development
    DISCOURSE_REDIS_HOST: redis
    RAILS_RELATIVE_URL_ROOT: /discuss
    # DB settings apply only if RAILS_ENV is production
    # else edit database.yml
    # DISCOURSE_CDN_URL:
    DISCOURSE_DB_HOST: db
    DISCOURSE_DB_USERNAME: postgres
    DISCOURSE_DB_NAME: discourse_development
    # on linux, change this to 127.0.0.1:3000
    # on mac, use `boot2docker ip` to find your ip
    DISCOURSE_HOSTNAME: 192.168.59.103:3000
    # because we are not using nginx
    DISCOURSE_SERVE_STATIC_ASSETS: true
nginx:
  image: nginx:1.7.8
  ports:
    - "80:80"
  volumes_from:
    - discourse
  links:
    - discourse
  command: bash -evx /opt/discourse/config/nginx-docker-start.sh